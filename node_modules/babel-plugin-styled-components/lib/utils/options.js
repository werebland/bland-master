"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useNoTags = exports.useTranspileTemplateLiterals = exports.useMinify = exports.useFileName = exports.useSSR = exports.useDisplayName = void 0;

function getOption(_ref, name) {
  var opts = _ref.opts;
  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  return opts[name] === undefined || opts[name] === null ? defaultValue : opts[name];
}

var useDisplayName = function useDisplayName(state) {
  return getOption(state, 'displayName');
};

exports.useDisplayName = useDisplayName;

var useSSR = function useSSR(state) {
  return getOption(state, 'ssr', true);
};

exports.useSSR = useSSR;

var useFileName = function useFileName(state) {
  return getOption(state, 'fileName');
};

exports.useFileName = useFileName;

var useMinify = function useMinify(state) {
  return getOption(state, 'minify');
};

exports.useMinify = useMinify;

var useTranspileTemplateLiterals = function useTranspileTemplateLiterals(state) {
  return getOption(state, 'transpileTemplateLiterals');
};
/**
 * When using the babel plugin, we desugar styled.div to styled('div'), which means we can
 * then use a lighter-weight version of s-c (v4+) since those element names don't need to be kept around
 * ahead of time.
 */


exports.useTranspileTemplateLiterals = useTranspileTemplateLiterals;

var useNoTags = function useNoTags() {
  return parseInt(require('styled-components/package.json').version.split('.')[0], 10) >= 4;
};

exports.useNoTags = useNoTags;